apiVersion: pingcap.com/v1alpha1
kind: TidbCluster

metadata:
  name: {{ .Values.tikvCluster.name }}
  namespace: {{ .Values.tikvCluster.namespace }}

spec:
  version: v8.1.0
  timezone: UTC
  pvReclaimPolicy: Retain
  enableDynamicConfiguration: true
  configUpdateStrategy: RollingUpdate
  discovery: {}
  helper:
    image: alpine:3.16.0

  pd:
    baseImage: {{ .Values.tikvCluster.pd.baseImage }}
    maxFailoverCount: {{ .Values.tikvCluster.pd.maxFailoverCount }}
    replicas: {{ .Values.tikvCluster.pd.replicas }}
    storageClassName: "{{ .Values.tikvCluster.pd.storageClassName }}"
    readinessProbe:
      type: "tcp"
    requests:
      cpu: {{ .Values.tikvCluster.pd.resources.requests.cpu }}
      memory: {{ .Values.tikvCluster.pd.resources.requests.memory }}
      storage: {{ .Values.tikvCluster.pd.resources.requests.storage }}
    limits:
      cpu: {{ .Values.tikvCluster.pd.resources.limits.cpu }}
      memory: {{ .Values.tikvCluster.pd.resources.limits.memory }}
    config: |
      [keyspace]
      pre-alloc = ["a", "b", "c"]
      [pd-server]
      initial-cluster-state = "existing"
      [log]
      level = "warn"

  tikv:
    baseImage: {{ .Values.tikvCluster.tikv.baseImage }}
    maxFailoverCount: {{ .Values.tikvCluster.tikv.maxFailoverCount }}
    replicas: {{ .Values.tikvCluster.tikv.replicas }}
    storageClassName: "{{ .Values.tikvCluster.tikv.storageClassName }}"
    requests:
      storage: {{ .Values.tikvCluster.tikv.resources.requests.storage }}
      cpu: {{ .Values.tikvCluster.tikv.resources.requests.cpu }}
      memory: {{ .Values.tikvCluster.tikv.resources.requests.memory }}
    limits:
      cpu: {{ .Values.tikvCluster.tikv.resources.limits.cpu }}
      memory: {{ .Values.tikvCluster.tikv.resources.limits.memory }}
    config: |
      [log]
      level = "warn"
      
      [storage]
      api-version = 2
      enable-ttl = true
      reserve-space = "1GB"

      [rocksdb]
      max-open-files = 1024

      [raftdb]
      max-open-files = 1024

apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: postgresql
  namespace: beesbiz-data
  labels:
    app: postgresql
spec:
  serviceName: postgresql
  replicas: {{ .Values.replicaCount.postgresql }}
  selector:
    matchLabels:
      app: postgresql
  template:
    metadata:
      annotations:
        dapr.io/enabled: "true"
        dapr.io/app-id: "postgresql"
        dapr.io/app-port: "5432"
      labels:
        app: postgresql
    spec:
      securityContext:
        fsGroup: 999
        runAsUser: 999
        runAsGroup: 999
      containers:
        - name: postgresql
          image: {{ .Values.postgresql.imageName }}
          imagePullPolicy: {{ .Values.postgresql.imagePullPolicy }}
          ports:
            - containerPort: 5432
              name: postgres
          env:
            - name: POSTGRES_DB
              value: {{ .Values.postgresql.database | default "postgres" }}
            - name: POSTGRES_USER
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.postgresql.superuserSecret.name | default "postgresql" }}
                  key: username
            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.postgresql.superuserSecret.name | default "postgresql" }}
                  key: password
            - name: PGDATA
              value: /var/lib/postgresql/data/pgdata
          resources:
            limits:
              cpu: {{ .Values.resources.limits.cpu }}
              memory: {{ .Values.resources.limits.memory }}
              ephemeral-storage: {{ .Values.resources.limits.ephemeralStorage }}
            requests:
              cpu: {{ .Values.resources.requests.cpu }}
              memory: {{ .Values.resources.requests.memory }}
              ephemeral-storage: {{ .Values.resources.requests.ephemeralStorage }}
          volumeMounts:
            - name: postgresql-storage
              mountPath: /var/lib/postgresql/data
              subPath: pgdata

          readinessProbe:
            exec:
              command:
                - /bin/sh
                - -c
                - exec pg_isready -U $POSTGRES_USER -d $POSTGRES_DB -h 127.0.0.1 -p 5432
            initialDelaySeconds: 10
            periodSeconds: 30
            timeoutSeconds: 10
            failureThreshold: 3
          livenessProbe:
            exec:
              command:
                - /bin/sh
                - -c
                - exec pg_isready -U $POSTGRES_USER -d $POSTGRES_DB -h 127.0.0.1 -p 5432
            initialDelaySeconds: 20
            periodSeconds: 30
            timeoutSeconds: 10
            failureThreshold: 3

  volumeClaimTemplates:
    - metadata:
        name: postgresql-storage
      spec:
        accessModes:
          - ReadWriteOnce
        resources:
          requests:
            storage: {{ .Values.postgresql.storage.size }}
        storageClassName: {{ .Values.postgresql.storage.storageClass }}

syntax = "proto3";

package bee_management;

import "google/protobuf/empty.proto";

option go_package = "github.com/orientallines/beesbiz/bee_management";

// Service Definition
service BeeManagementService {
  // 1. Get Total Honey Harvested
  rpc GetTotalHoneyHarvested(GetTotalHoneyHarvestedRequest)
      returns (GetTotalHoneyHarvestedResponse) {}

  // 2. Add Observation
  rpc AddObservation(AddObservationRequest) returns (google.protobuf.Empty) {}

  // 3. Get Community Health Status
  rpc GetCommunityHealthStatus(GetCommunityHealthStatusRequest)
      returns (GetCommunityHealthStatusResponse) {}

  // 4. Update Hive Status
  rpc UpdateHiveStatus(UpdateHiveStatusRequest)
      returns (google.protobuf.Empty) {}

  // 5. Get Average Temperature
  rpc GetAvgTemperature(GetAvgTemperatureRequest)
      returns (GetAvgTemperatureResponse) {}

  // 6. Assign Maintenance Plan
  rpc AssignMaintenancePlan(AssignMaintenancePlanRequest)
      returns (google.protobuf.Empty) {}

  // 7. Check Region Access
  rpc HasRegionAccess(HasRegionAccessRequest)
      returns (HasRegionAccessResponse) {}

  // 8. Register Incident
  rpc RegisterIncident(RegisterIncidentRequest)
      returns (google.protobuf.Empty) {}

  // 9. Get Latest Sensor Reading
  rpc GetLatestSensorReading(GetLatestSensorReadingRequest)
      returns (GetLatestSensorReadingResponse) {}

  // 10. Create Production Report
  rpc CreateProductionReport(CreateProductionReportRequest)
      returns (google.protobuf.Empty) {}
}

// Message Definitions

// 1. GetTotalHoneyHarvested
message GetTotalHoneyHarvestedRequest {
  int32 hive_id = 1;
  string start_date = 2; // Format: YYYY-MM-DD
  string end_date = 3;   // Format: YYYY-MM-DD
}

message GetTotalHoneyHarvestedResponse { double total_honey = 1; }

// 2. AddObservation
message AddObservationRequest {
  int32 hive_id = 1;
  string observation_date = 2; // Format: YYYY-MM-DD
  string description = 3;
  string recommendations = 4;
}

// 3. GetCommunityHealthStatus
message GetCommunityHealthStatusRequest { int32 community_id = 1; }

message GetCommunityHealthStatusResponse { string health_status = 1; }

// 4. UpdateHiveStatus
message UpdateHiveStatusRequest {
  int32 hive_id = 1;
  string new_status = 2;
}

// 5. GetAvgTemperature
message GetAvgTemperatureRequest {
  int32 region_id = 1;
  int32 days = 2;
}

message GetAvgTemperatureResponse { double avg_temperature = 1; }

// 6. AssignMaintenancePlan
message AssignMaintenancePlanRequest {
  int32 plan_id = 1;
  int32 user_id = 2;
}

// 7. HasRegionAccess
message HasRegionAccessRequest {
  int32 user_id = 1;
  int32 region_id = 2;
}

message HasRegionAccessResponse { bool has_access = 1; }

// 8. RegisterIncident
message RegisterIncidentRequest {
  int32 hive_id = 1;
  string incident_date = 2; // Format: YYYY-MM-DD
  string description = 3;
  string severity = 4;
}

// 9. GetLatestSensorReading
message GetLatestSensorReadingRequest {
  int32 hive_id = 1;
  string sensor_type = 2;
}

message GetLatestSensorReadingResponse {
  bytes value = 1;
  string timestamp = 2; // ISO 8601 format
}

// 10. CreateProductionReport
message CreateProductionReportRequest {
  int32 apiary_id = 1;
  string start_date = 2; // Format: YYYY-MM-DD
  string end_date = 3;   // Format: YYYY-MM-DD
}

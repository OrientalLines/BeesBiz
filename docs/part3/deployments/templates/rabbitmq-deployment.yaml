apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: rabbitmq
  labels:
    app: rabbitmq
spec:
  serviceName: "rabbitmq"
  replicas: {{ .Values.replicaCount.rabbitmq }}
  selector:
    matchLabels:
      app: rabbitmq
  template:
    metadata:
      labels:
        app: rabbitmq
    spec:
      containers:
        - name: rabbitmq
          image: {{ .Values.rabbitmq.image }}
          ports:
            - name: amqp
              containerPort: {{ .Values.rabbitmq.port }}
            - name: management
              containerPort: {{ .Values.rabbitmq.managementPort }}
          volumeMounts:
            - name: rabbitmq-storage
              mountPath: /var/lib/rabbitmq
          resources:
            limits:
              cpu: {{ .Values.resources.limits.cpu }}
              memory: {{ .Values.resources.limits.memory }}
              ephemeral-storage: {{ .Values.resources.limits.ephemeralStorage }}
            requests:
              cpu: {{ .Values.resources.requests.cpu }}
              memory: {{ .Values.resources.requests.memory }}
              ephemeral-storage: {{ .Values.resources.requests.ephemeralStorage }}

          readinessProbe:
            exec:
              command: ["rabbitmq-diagnostics", "-q", "ping"]
            initialDelaySeconds: 10
            periodSeconds: 30
            timeoutSeconds: 10
            failureThreshold: 3
          livenessProbe:
            exec:
              command: ["rabbitmq-diagnostics", "-q", "ping"]
            initialDelaySeconds: 30
            periodSeconds: 30
            timeoutSeconds: 10
            failureThreshold: 3

  volumeClaimTemplates:
    - metadata:
        name: rabbitmq-storage
      spec:
        accessModes:
          - ReadWriteOnce
        resources:
          requests:
            storage: {{ .Values.rabbitmq.persistence.size }}
        storageClassName: {{ .Values.rabbitmq.persistence.storageClass }}
